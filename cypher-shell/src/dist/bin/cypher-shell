#!/bin/bash

set -euo pipefail
[[ "${TRACE:-}" ]] && set -x

setup_environment() {
  _setup_calculated_paths
  _setup_configurable_paths
}

_setup_calculated_paths() {
  if [[ -z "${NEO4J_HOME:-}" ]]; then
    NEO4J_HOME="$(cd "$(dirname "$0")"/.. && pwd)"
  fi
}

_setup_configurable_paths() {
  # For finding it in neo4j distribution
  CYPHER_SHELL_NEO4J_LIB=$(resolve_path "bin/tools/cypher-shell/lib")
  # For finding it in local build (important to be last)
  CYPHER_SHELL_LIB=$(resolve_path "lib")
  readonly CYPHER_SHELL_LIB CYPHER_SHELL_NEO4J_LIB
}

# Resolve a path relative to $NEO4J_HOME.  Don't resolve if
# the path is absolute.
resolve_path() {
    orig_filename=$1
    if [[ ${orig_filename} == /* ]]; then
        filename="${orig_filename}"
    else
        filename="${NEO4J_HOME}/${orig_filename}"
    fi
    echo "${filename}"
}

check_java() {
  _find_java_cmd

  version_command=("${JAVA_CMD}" "-version")
  [[ -n "${JAVA_MEMORY_OPTS:-}" ]] && version_command+=("${JAVA_MEMORY_OPTS[@]}")

  JAVA_VERSION=$("${version_command[@]}" 2>&1 | awk -F '"' '/version/ {print $2}')
  if [[ "${JAVA_VERSION}" < "1.8" ]]; then
    echo "ERROR! Java version ${JAVA_VERSION} is not supported. "
    _show_java_help
    exit 1
  fi
}

_find_java_cmd() {
  [[ "${JAVA_CMD:-}" ]] && return
  detect_os
  _find_java_home

  if [[ "${JAVA_HOME:-}" ]] ; then
    JAVA_CMD="${JAVA_HOME}/bin/java"
  else
    if [ "${DIST_OS}" != "macosx" ] ; then
      # Don't use default java on Darwin because it displays a misleading dialog box
      JAVA_CMD="$(which java || true)"
    fi
  fi

  if [[ ! "${JAVA_CMD:-}" ]]; then
    echo "ERROR: Unable to find Java executable."
    _show_java_help
    exit 1
  fi
}

detect_os() {
  if uname -s | grep -q Darwin; then
    DIST_OS="macosx"
  elif [[ -e /etc/gentoo-release ]]; then
    DIST_OS="gentoo"
  else
    DIST_OS="other"
  fi
}

_find_java_home() {
  [[ "${JAVA_HOME:-}" ]] && return

  case "${DIST_OS}" in
    "macosx")
      JAVA_HOME="$(/usr/libexec/java_home -v 1.8)"
      ;;
    "gentoo")
      JAVA_HOME="$(java-config --jre-home)"
      ;;
  esac
}

_show_java_help() {
  echo "* Please use Oracle(R) Java(TM) 8 or OpenJDK(TM) 8."
}

build_classpath() {
  CLASSPATH="${CYPHER_SHELL_LIB}/*:${CYPHER_SHELL_NEO4J_LIB}/*"
}

setup_environment
check_java
build_classpath

exec "$JAVA_CMD" ${JAVA_OPTS:-} \
  -classpath "$CLASSPATH" \
  -Dfile.encoding=UTF-8 \
  org.neo4j.shell.Main \
  "$@"
